
module.exports = EventBus;

var EventEmitter = require("events").EventEmitter;

function EventBus(proxy){
	this._emitter =  new EventEmitter();
	this._emitter.$service = proxy.$service;
	this._emitter.$getAggreType = proxy.$getAggreType;
}

EventBus.prototype = {

	_on:function(aggreType,aggreId,eventName,handle){
		var isOn = [].shift.apply(arguments);
		if(arguments.length == 4){
			aggreType = aggreType + aggreId + eventName ;
		}else if(arguments.length == 3){
			aggreType = aggreType + aggreId;
			handle = eventName;
		}else{
			handle = aggreId;
		}
		
		if(isOn){
			this._emitter.on(aggreType,handle);
		}else{
			this._emitter.once(aggreType,handle);
		}
		
	},

	once:function(){
		[].unshift.call(arguments,false);
		this._on.apply(this,arguments);
	},
	
	on:function(){
		[].unshift.call(arguments,true);
		this._on.apply(this,arguments);
	},
	
	publish : function(event){
		this._emitter.emit('newEvent',event);
		if(!event.aggreType){
			this._emitter.emit(event.name,event);	
		}else{
			this._emitter.emit(event.aggreType+event.aggreId+event.name,event);	
			this._emitter.emit(event.aggreType+event.name,event);
			this._emitter.emit(event.aggreType,event);
			this._emitter.emit(event.name,event);
		}
	}
}