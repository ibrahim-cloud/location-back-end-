var should = require("should");
var AggreProto = require("../lib/AggreProto");
var Builder  = require("../lib/Builder");

describe("AggreProto",function(){
	var aggre,aggobj;
	var builder = new Builder();

	it("new",function(){
		builder.bindAggreType("myAggre",function(data){return data;},{changeName:function(name){console.log(name)}});
		builder.bindDB({save:function(){},remove:function(){}})
		builder.bindEventHandle(true,"event01",function(){console.log("have event  01")})
		builder.bindService("service01",function(){
			console.log("hello world!");
		})
		
		aggre = builder._AggreTypes["myAggre"];
		aggobj =  new aggre({name:"leo"});			
	});

	it("$data",function(){
		aggobj.should.have.property("$data");
		aggobj.$data("name","brighthas");
		aggobj._data.name.should.equal("brighthas");
	});
	
	it("id",function(){
		should.exist(aggobj.id)
	});
	
	it("$getAggreType",function(){
		var T = aggobj.$getAggreType("myAggre");
		T.should.be.a("function")
	});
	
	it("data",function(){
		aggobj.data("name").should.be.a("string");
	});
	
	it("$service",function(){
		aggobj.$service("service01")
	})
	
	it("$publish",function(){
		aggobj.$publish("event01");
	})
	
	
	it("remove",function(){
		var id  =  aggobj.id;
		var T = aggobj.$getAggreType("myAggre");
		T.get(id,function(obj){
			should.exist(obj);
		})
		aggobj.remove.should.be.a("function");
		aggobj.remove();
		var T = aggobj.$getAggreType("myAggre");
		T.get(id,function(obj){
			should.not.exist(obj);
		})
	})

});